@version: 3.6
# {{ ansible_managed }}

options {
	chain_hostnames(no);

	# The default action of syslog-ng is to log a STATS line to the file every
	# 10 minutes. That's pretty ugly after a while. Change it to every 12 hours
	# so you get a nice daily update of how many messages syslog-ng missed (0).
	stats_freq(43200);

	# The default action of syslog-ng is to log a MARK line to the file every
	# 20 minutes. That's seems high for most people so turn it down to once an
	# hour. Set it to zero if you don't want the functionality at all.
	mark_freq(3600);

	# Use ISO-8601 timestamp format instead of the default RFC-3164.
	ts_format(iso);
};

# The custom template for file destinations.
template tmpl { template("{{ syslog_default_template }}"); };


################################################################################
# SOURCES
#

{% for id in _default_sources.keys() | union(syslog_sources.keys()) %}
source {{ id }} {
{% for dic in _default_sources.get(id, []) + syslog_sources.get(id, []) %}

{% if 'comment' in dic %}
	# {{ dic.comment }}
{% endif %}
{% for k, v in dic.items() if k != 'comment' %}
	{{ k | replace('_', '-') }}({{ '"%s"'|format(v) if v else '' }});
{% endfor %}
{% endfor %}
};

{% endfor %}

################################################################################
# DESTINATIONS
#
{% for log in syslog_logs %}
{% if loop.first %}

# HOST SPECIFIC DESTINATIONS
{% endif %}
destination d_{{ log.id }}		{ file("/var/log/{{ log.file_name |default(log.id + '.log', true) }}" template(tmpl)); };
{% endfor %}

# COMMON DESTINATIONS
destination d_authlog		{ file("/var/log/auth.log" template(tmpl)); };
destination d_cron			{ file("/var/log/cron.log" template(tmpl)); };
destination d_dhcpcd		{ file("/var/log/dhcpcd.log" template(tmpl)); };
destination d_iptables		{ file("/var/log/iptables.log" template(tmpl)); };
destination d_kern			{ file("/var/log/kern.log" template(tmpl)); file("/dev/tty12" template(tmpl)); };
destination d_mail			{ file("/var/log/mail.log" template(tmpl)); };
destination d_messages		{ file("/var/log/messages" template(tmpl)); };
destination d_syslog		{ file("/var/log/syslog" template(tmpl)); };
destination d_user			{ file("/var/log/user.log" template(tmpl)); };
destination d_warn			{ file("/var/log/warn.log" template(tmpl)); };
{% if syslog_hardened %}
destination d_grsec			{ file("/var/log/grsec.log" template(tmpl)); };
destination d_pax			{ file("/var/log/pax.log" template(tmpl)); };
{% endif %}

destination d_console		{ usertty("root"); };
destination d_console_all	{ file("/dev/tty12" template(tmpl)); };


################################################################################
# FILTERS
#
{% for log in syslog_logs %}
{% if loop.first %}

# HOST SPECIFIC FILTERS
{% endif %}
filter f_{{ log.id }}	{ {{ log.filter |default('program(' + log.id + ')', true) }}; };
{% endfor %}

# COMMON FILTERS
filter f_authpriv	{ facility(auth, authpriv); };
filter f_cron		{ facility(cron); };
filter f_dhcpcd		{ program(dhcpcd); };
filter f_emergency	{ level(emerg); };
filter f_iptables	{ message("^(\\[.*\..*\] |)ip6?tables.*"); };
filter f_kern		{ facility(kern); };
filter f_mail		{ facility(mail); };
filter f_syslog		{ not facility(authpriv); };
filter f_user		{ facility(user); };
filter f_warn		{ level(warn..alert); };
{% if syslog_hardened %}
filter f_grsec		{ message("^(\\[.*\..*\] |)grsec:.*"); };
filter f_pax		{ message("^(\\[.*\..*\] |)PAX:.*"); };
{% endif %}

filter f_messages	{
	level(info..alert)
	and not facility(auth, authpriv, mail, cron)
	and not program (syslog-ng)
	and not ( program (dhcpcd) and level(debug..notice) )
};


################################################################################
# LOGS
#
{% for log in syslog_logs %}
{% if loop.first %}

# HOST SPECIFIC LOGS
{% endif %}
log { source({{ log.source |default('src', true) }});  filter(f_{{ log.id }});  destination(d_{{ log.id }}); {% if log.final is defined %}flags(final); {% endif %}};
{% endfor %}

# COMMON LOGS
log { source(kernsrc);	filter(f_iptables);		destination(d_iptables); flags(final); };
log { source(kernsrc);	filter(f_kern);			destination(d_kern); };
{% if syslog_hardened %}
log { source(kernsrc);	filter(f_pax);			destination(d_pax); };
log { source(kernsrc);	filter(f_grsec);		destination(d_grsec); };
{% endif %}

log { source(src);		filter(f_authpriv);		destination(d_authlog);	};
log { source(src);		filter(f_cron);			destination(d_cron); };
log { source(src);		filter(f_dhcpcd);		destination(d_dhcpcd); };
log { source(src);		filter(f_mail);			destination(d_mail); };
log { source(src);		filter(f_messages);		destination(d_messages); };
log { source(src);		filter(f_syslog);		destination(d_syslog); };
log { source(src);		filter(f_user);			destination(d_user); };
log { source(src);		filter(f_warn);			destination(d_warn); };

log { source(src);		filter(f_emergency);	destination(d_console); };
log { source(src);								destination(d_console_all); };
